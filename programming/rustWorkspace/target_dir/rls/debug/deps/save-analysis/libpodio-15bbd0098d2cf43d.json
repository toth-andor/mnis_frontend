{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7","program":"/home/andort/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","podio","/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=15bbd0098d2cf43d","-C","extra-filename=-15bbd0098d2cf43d","--out-dir","/home/andort/programming/rustWorkspace/mnist_frontend/programming/rustWorkspace/target_dir/rls/debug/deps","-L","dependency=/home/andort/programming/rustWorkspace/mnist_frontend/programming/rustWorkspace/target_dir/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/andort/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/andort/programming/rustWorkspace/mnist_frontend/programming/rustWorkspace/target_dir/rls/debug/deps/libpodio-15bbd0098d2cf43d.rmeta"},"prelude":{"crate_id":{"name":"podio","disambiguator":[5485498033057665879,6485772034173628836]},"crate_root":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src","external_crates":[{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}}],"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":0,"byte_end":10380,"line_start":1,"line_end":364,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":0,"byte_end":10380,"line_start":1,"line_end":364,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":12},{"krate":0,"index":17},{"krate":0,"index":36},{"krate":0,"index":56},{"krate":0,"index":61},{"krate":0,"index":122},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":137},{"krate":0,"index":68},{"krate":0,"index":88},{"krate":0,"index":91}],"decl_id":null,"docs":" Additional methods for Read and Write","sig":null,"attributes":[{"value":"/ Additional methods for Read and Write","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":0,"byte_end":41,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":42,"byte_end":45,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The additional methods implemented allow reading and writing integers and floats","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":46,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/ in the specified endianness.","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":131,"byte_end":163,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":164,"byte_end":167,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":168,"byte_end":179,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":180,"byte_end":183,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Basically, you need to `use` the trait WritePodExt or ReadPodExt.","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":184,"byte_end":253,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":254,"byte_end":257,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":258,"byte_end":272,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":273,"byte_end":276,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Reading","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":277,"byte_end":291,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":292,"byte_end":295,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To read some value from a reader, import ReadPodExt and the needed endianness.","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":296,"byte_end":378,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":379,"byte_end":382,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":383,"byte_end":390,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use podio::{ReadPodExt, BigEndian};","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":391,"byte_end":430,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":431,"byte_end":434,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let slice: &[u8] = &[0x10, 0x20, 0x30, 0x40];","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":435,"byte_end":484,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ let mut reader = std::io::Cursor::new(slice);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":485,"byte_end":534,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":535,"byte_end":538,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let value = reader.read_u32::<BigEndian>().unwrap();","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":539,"byte_end":595,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":596,"byte_end":599,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(value, 0x10203040);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":600,"byte_end":634,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":635,"byte_end":642,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":643,"byte_end":646,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Writing","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":647,"byte_end":661,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":662,"byte_end":665,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For writing, you need to import the trait WritePodExt.","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":666,"byte_end":724,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":725,"byte_end":728,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":729,"byte_end":736,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use podio::{WritePodExt, LittleEndian};","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":737,"byte_end":780,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":781,"byte_end":784,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let slice: &mut [u8] = &mut [0; 2];","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":785,"byte_end":824,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ let mut writer = std::io::Cursor::new(slice);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":825,"byte_end":874,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":875,"byte_end":878,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ writer.write_u16::<LittleEndian>(0x8802).unwrap();","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":879,"byte_end":933,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":934,"byte_end":937,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(writer.into_inner(), &[0x02, 0x88]);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":938,"byte_end":989,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":990,"byte_end":997,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":998,"byte_end":1001,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Read exact","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1002,"byte_end":1019,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1020,"byte_end":1023,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ One additional method, not really dealing with POD, is `read_exact`.","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1024,"byte_end":1096,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1097,"byte_end":1100,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1101,"byte_end":1108,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use podio::ReadPodExt;","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1109,"byte_end":1135,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1136,"byte_end":1139,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let slice: &[u8] = &[0, 1, 2, 3];","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1140,"byte_end":1177,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ let mut reader = std::io::Cursor::new(slice);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1178,"byte_end":1227,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1228,"byte_end":1231,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(reader.read_exact(1).unwrap(), [0]);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1232,"byte_end":1283,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(reader.read_exact(2).unwrap(), [1,2]);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1284,"byte_end":1337,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(reader.read_exact(0).unwrap(), []);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1338,"byte_end":1388,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(reader.read_exact(1).unwrap(), [3]);","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1389,"byte_end":1440,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/ assert!(reader.read_exact(1).is_err());","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1441,"byte_end":1484,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"warn(missing_docs)","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1486,"byte_end":1508,"line_start":58,"line_end":58,"column_start":1,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":5},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1622,"byte_end":1634,"line_start":64,"line_end":64,"column_start":10,"column_end":22},"name":"LittleEndian","qualname":"::LittleEndian","value":"pub enum LittleEndian { }","parent":null,"children":[],"decl_id":null,"docs":" Little endian. The number `0xABCD` is stored `[0xCD, 0xAB]`\n","sig":null,"attributes":[{"value":"/ Little endian. The number `0xABCD` is stored `[0xCD, 0xAB]`","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1549,"byte_end":1612,"line_start":63,"line_end":63,"column_start":1,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":6},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1708,"byte_end":1717,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"BigEndian","qualname":"::BigEndian","value":"pub enum BigEndian { }","parent":null,"children":[],"decl_id":null,"docs":" Big endian. The number `0xABCD` is stored `[0xAB, 0xCD]`\n","sig":null,"attributes":[{"value":"/ Big endian. The number `0xABCD` is stored `[0xAB, 0xCD]`","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1638,"byte_end":1698,"line_start":65,"line_end":65,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1800,"byte_end":1810,"line_start":69,"line_end":69,"column_start":11,"column_end":21},"name":"Endianness","qualname":"::Endianness","value":"Endianness","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":10}],"decl_id":null,"docs":" Trait implementing conversion methods for a specific endianness\n","sig":null,"attributes":[{"value":"/ Trait implementing conversion methods for a specific endianness","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1722,"byte_end":1789,"line_start":68,"line_end":68,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1896,"byte_end":1909,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"int_to_target","qualname":"::Endianness::int_to_target","value":"pub fn int_to_target<T: EndianConvert>(T) -> T","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Converts a value from the platform type to the specified endianness\n","sig":null,"attributes":[{"value":"/ Converts a value from the platform type to the specified endianness","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1817,"byte_end":1888,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2025,"byte_end":2040,"line_start":73,"line_end":73,"column_start":8,"column_end":23},"name":"int_from_target","qualname":"::Endianness::int_from_target","value":"pub fn int_from_target<T: EndianConvert>(T) -> T","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Converts a value from the sepcified endianness to the platform type\n","sig":null,"attributes":[{"value":"/ Converts a value from the sepcified endianness to the platform type","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":1946,"byte_end":2017,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2139,"byte_end":2152,"line_start":77,"line_end":77,"column_start":11,"column_end":24},"name":"EndianConvert","qualname":"::EndianConvert","value":"EndianConvert","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" Generic trait for endian conversions on integers\n","sig":null,"attributes":[{"value":"/ Generic trait for endian conversions on integers","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2076,"byte_end":2128,"line_start":76,"line_end":76,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2205,"byte_end":2210,"line_start":79,"line_end":79,"column_start":8,"column_end":13},"name":"to_be","qualname":"::EndianConvert::to_be","value":"pub fn to_be(Self) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Convert self to a big-endian value\n","sig":null,"attributes":[{"value":"/ Convert self to a big-endian value","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2159,"byte_end":2197,"line_start":78,"line_end":78,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2279,"byte_end":2284,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"to_le","qualname":"::EndianConvert::to_le","value":"pub fn to_le(Self) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Convert self to a little-endian value\n","sig":null,"attributes":[{"value":"/ Convert self to a little-endian value","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2230,"byte_end":2271,"line_start":80,"line_end":80,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2367,"byte_end":2374,"line_start":83,"line_end":83,"column_start":8,"column_end":15},"name":"from_be","qualname":"::EndianConvert::from_be","value":"pub fn from_be(Self) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Convert a big-endian value to the target endianness\n","sig":null,"attributes":[{"value":"/ Convert a big-endian value to the target endianness","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2304,"byte_end":2359,"line_start":82,"line_end":82,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2462,"byte_end":2469,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"from_le","qualname":"::EndianConvert::from_le","value":"pub fn from_le(Self) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Convert a little-endian value to the target endiannes\n","sig":null,"attributes":[{"value":"/ Convert a little-endian value to the target endiannes","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2397,"byte_end":2454,"line_start":84,"line_end":84,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2546,"byte_end":2557,"line_start":89,"line_end":89,"column_start":11,"column_end":22},"name":"WritePodExt","qualname":"::WritePodExt","value":"WritePodExt","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34}],"decl_id":null,"docs":" Additional write methods for a io::Write\n","sig":null,"attributes":[{"value":"/ Additional write methods for a io::Write","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2491,"byte_end":2535,"line_start":88,"line_end":88,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2587,"byte_end":2596,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::WritePodExt::write_u64","value":"pub fn write_u64<T: Endianness>(&mut Self, u64) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a u64\n","sig":null,"attributes":[{"value":"/ Write a u64","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2564,"byte_end":2579,"line_start":90,"line_end":90,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2674,"byte_end":2683,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::WritePodExt::write_u32","value":"pub fn write_u32<T: Endianness>(&mut Self, u32) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a u32\n","sig":null,"attributes":[{"value":"/ Write a u32","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2651,"byte_end":2666,"line_start":92,"line_end":92,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2761,"byte_end":2770,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::WritePodExt::write_u16","value":"pub fn write_u16<T: Endianness>(&mut Self, u16) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a u16\n","sig":null,"attributes":[{"value":"/ Write a u16","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2738,"byte_end":2753,"line_start":94,"line_end":94,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2847,"byte_end":2855,"line_start":97,"line_end":97,"column_start":8,"column_end":16},"name":"write_u8","qualname":"::WritePodExt::write_u8","value":"pub fn write_u8(&mut Self, u8) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a u8\n","sig":null,"attributes":[{"value":"/ Write a u8","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2825,"byte_end":2839,"line_start":96,"line_end":96,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2917,"byte_end":2926,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"write_i64","qualname":"::WritePodExt::write_i64","value":"pub fn write_i64<T: Endianness>(&mut Self, i64) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a i64\n","sig":null,"attributes":[{"value":"/ Write a i64","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2894,"byte_end":2909,"line_start":98,"line_end":98,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3004,"byte_end":3013,"line_start":101,"line_end":101,"column_start":8,"column_end":17},"name":"write_i32","qualname":"::WritePodExt::write_i32","value":"pub fn write_i32<T: Endianness>(&mut Self, i32) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a i32\n","sig":null,"attributes":[{"value":"/ Write a i32","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":2981,"byte_end":2996,"line_start":100,"line_end":100,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3091,"byte_end":3100,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"write_i16","qualname":"::WritePodExt::write_i16","value":"pub fn write_i16<T: Endianness>(&mut Self, i16) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a i16\n","sig":null,"attributes":[{"value":"/ Write a i16","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3068,"byte_end":3083,"line_start":102,"line_end":102,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3177,"byte_end":3185,"line_start":105,"line_end":105,"column_start":8,"column_end":16},"name":"write_i8","qualname":"::WritePodExt::write_i8","value":"pub fn write_i8(&mut Self, i8) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a i8\n","sig":null,"attributes":[{"value":"/ Write a i8","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3155,"byte_end":3169,"line_start":104,"line_end":104,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3247,"byte_end":3256,"line_start":107,"line_end":107,"column_start":8,"column_end":17},"name":"write_f32","qualname":"::WritePodExt::write_f32","value":"pub fn write_f32<T: Endianness>(&mut Self, f32) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a f32\n","sig":null,"attributes":[{"value":"/ Write a f32","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3224,"byte_end":3239,"line_start":106,"line_end":106,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3334,"byte_end":3343,"line_start":109,"line_end":109,"column_start":8,"column_end":17},"name":"write_f64","qualname":"::WritePodExt::write_f64","value":"pub fn write_f64<T: Endianness>(&mut Self, f64) -> io::Result<()>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Write a f64\n","sig":null,"attributes":[{"value":"/ Write a f64","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3311,"byte_end":3326,"line_start":108,"line_end":108,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3450,"byte_end":3460,"line_start":113,"line_end":113,"column_start":11,"column_end":21},"name":"ReadPodExt","qualname":"::ReadPodExt","value":"ReadPodExt","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55}],"decl_id":null,"docs":" Additional read methods for a io::Read\n","sig":null,"attributes":[{"value":"/ Additional read methods for a io::Read","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3397,"byte_end":3439,"line_start":112,"line_end":112,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3489,"byte_end":3497,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::ReadPodExt::read_u64","value":"pub fn read_u64<T: Endianness>(&mut Self) -> io::Result<u64>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a u64\n","sig":null,"attributes":[{"value":"/ Read a u64","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3467,"byte_end":3481,"line_start":114,"line_end":114,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3570,"byte_end":3578,"line_start":117,"line_end":117,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::ReadPodExt::read_u32","value":"pub fn read_u32<T: Endianness>(&mut Self) -> io::Result<u32>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a u32\n","sig":null,"attributes":[{"value":"/ Read a u32","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3548,"byte_end":3562,"line_start":116,"line_end":116,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3651,"byte_end":3659,"line_start":119,"line_end":119,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::ReadPodExt::read_u16","value":"pub fn read_u16<T: Endianness>(&mut Self) -> io::Result<u16>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a u16\n","sig":null,"attributes":[{"value":"/ Read a u16","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3629,"byte_end":3643,"line_start":118,"line_end":118,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3731,"byte_end":3738,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::ReadPodExt::read_u8","value":"pub fn read_u8(&mut Self) -> io::Result<u8>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a u8\n","sig":null,"attributes":[{"value":"/ Read a u8","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3710,"byte_end":3723,"line_start":120,"line_end":120,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3795,"byte_end":3803,"line_start":123,"line_end":123,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::ReadPodExt::read_i64","value":"pub fn read_i64<T: Endianness>(&mut Self) -> io::Result<i64>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a i64\n","sig":null,"attributes":[{"value":"/ Read a i64","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3773,"byte_end":3787,"line_start":122,"line_end":122,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3876,"byte_end":3884,"line_start":125,"line_end":125,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::ReadPodExt::read_i32","value":"pub fn read_i32<T: Endianness>(&mut Self) -> io::Result<i32>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a i32\n","sig":null,"attributes":[{"value":"/ Read a i32","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3854,"byte_end":3868,"line_start":124,"line_end":124,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3957,"byte_end":3965,"line_start":127,"line_end":127,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::ReadPodExt::read_i16","value":"pub fn read_i16<T: Endianness>(&mut Self) -> io::Result<i16>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a i16\n","sig":null,"attributes":[{"value":"/ Read a i16","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":3935,"byte_end":3949,"line_start":126,"line_end":126,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4037,"byte_end":4044,"line_start":129,"line_end":129,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::ReadPodExt::read_i8","value":"pub fn read_i8(&mut Self) -> io::Result<i8>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a i8\n","sig":null,"attributes":[{"value":"/ Read a i8","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4016,"byte_end":4029,"line_start":128,"line_end":128,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4101,"byte_end":4109,"line_start":131,"line_end":131,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::ReadPodExt::read_f32","value":"pub fn read_f32<T: Endianness>(&mut Self) -> io::Result<f32>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a f32\n","sig":null,"attributes":[{"value":"/ Read a f32","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4079,"byte_end":4093,"line_start":130,"line_end":130,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4182,"byte_end":4190,"line_start":133,"line_end":133,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::ReadPodExt::read_f64","value":"pub fn read_f64<T: Endianness>(&mut Self) -> io::Result<f64>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a f64\n","sig":null,"attributes":[{"value":"/ Read a f64","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4160,"byte_end":4174,"line_start":132,"line_end":132,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4284,"byte_end":4294,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::ReadPodExt::read_exact","value":"pub fn read_exact(&mut Self, usize) -> io::Result<Vec<u8>>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Read a specific number of bytes\n","sig":null,"attributes":[{"value":"/ Read a specific number of bytes","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4241,"byte_end":4276,"line_start":134,"line_end":134,"column_start":5,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4360,"byte_end":4372,"line_start":138,"line_end":138,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4611,"byte_end":4620,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":6159,"byte_end":6160,"line_start":217,"line_end":217,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":8676,"byte_end":8677,"line_start":307,"line_end":307,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4360,"byte_end":4372,"line_start":138,"line_end":138,"column_start":21,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":5},"to":{"krate":0,"index":7}},{"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":4611,"byte_end":4620,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":6},"to":{"krate":0,"index":7}},{"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":6159,"byte_end":6160,"line_start":217,"line_end":217,"column_start":32,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":69},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/andort/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.7/src/lib.rs","byte_start":8676,"byte_end":8677,"line_start":307,"line_end":307,"column_start":30,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":36}}]}